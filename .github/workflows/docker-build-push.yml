name: Build and Push Docker Image
on:
  push:
    branches:
      - main
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/my-python-app:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/my-python-app:${{ github.sha }}
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push  # 确保在构建和推送完成后运行
    steps:
      # 1. 设置SSH密钥
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      # 2. 添加服务器到known_hosts
      - name: Add server to known_hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # 3. 部署到服务器
      - name: Deploy to Server
        run: |
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} << 'EOF'
            # 登录DockerHub（如果服务器需要拉取私有镜像）
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            # 停止并删除旧容器（如果存在）
            docker stop my-python-app || true
            docker rm my-python-app || true
            # 拉取最新镜像
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-python-app:latest
            # 运行新容器
            docker run -d --name my-python-app -p 5000:5000 ${{ secrets.DOCKERHUB_USERNAME }}/my-python-app:latest || {echo "run failed"; exit 1; }
            # 可选：清理未使用的镜像
            docker image prune -f
          EOF
